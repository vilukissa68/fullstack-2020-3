{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Contacts.js","components/Notification.js","services/contact.js","App.js","index.js"],"names":["Filter","props","value","string","onChange","handleChange","PersonForm","onSubmit","addContact","newName","handleNameChange","newNumber","handleNumberChange","type","ShowContacts","persons","map","person","i","key","name","number","id","onClick","handleDeleteClick","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","showAll","setShowAll","filterString","setFilterString","errorMessage","setErrorMessage","notificationMessage","setNotificationMessage","useEffect","contactService","initialPersons","contactsToShow","filter","toLowerCase","includes","updateContact","console","log","returnedContact","p","setTimeout","catch","error","event","target","preventDefault","contactObject","length","it","find","element","window","confirm","concat","removeID","parseInt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36724911.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    return(\n    <form>\n        <div>filter shown with <input value={props.string}\n        onChange={props.handleChange}/></div>\n    </form>\n    )}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  return(\n    <form onSubmit={props.addContact}>\n        <div>\n        name: <input value={props.newName}\n        onChange={props.handleNameChange} />\n        </div>\n        <div>\n        number: <input value={props.newNumber}\n        onChange={props.handleNumberChange} />\n        </div>\n        <div>\n        <button type=\"submit\">add</button>\n        </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst ShowContacts = (props) => {\n    return(\n      <ul>\n      {props.persons.map((person, i) =>\n        <p key={i}>{person.name} {person.number} <button id={person.id} onClick={props.handleDeleteClick}>delete</button></p>\n      )}\n      </ul>\n    )\n  }\n\nexport default ShowContacts","import React from 'react'\n\nconst Notification = (props) => {\n\n    if (props.message === null){\n        return null\n    }\n\n    return (\n        <div className=\"notification\">\n            {props.message}\n        </div>\n    )\n}\n\nconst Error = (props) => {\n\n    if (props.message === null){\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {props.message}\n        </div>\n    )\n}\n\n\nexport default {Notification, Error}","import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response)\n}\n\nexport default { getAll, create, update, remove}\n","\nimport React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport ShowContacts from './components/Contacts'\nimport Notifications from './components/Notification'\nimport contactService from './services/contact'\nimport './index.css'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ showAll, setShowAll] = useState(true)\n  const [ filterString, setFilterString] = useState('')\n  const [ errorMessage, setErrorMessage] = useState(null)\n  const [ notificationMessage, setNotificationMessage] = useState(null)\n\nconst hook = () => {\n  contactService\n    .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n}\n\nuseEffect(hook, [])\n\nconst addContact = (event) => {\n  event.preventDefault()\n  const contactObject = {\n    name: newName,\n    number: newNumber,\n    id: persons[persons.length -1].id + 1,\n  }\n\n  const it = persons.find(element => element.name === newName)\n\n  if(typeof it !== 'undefined'){\n    const results = window.confirm(`${newName} is already added to the phonebook, \n    replace the old number with a new one?`)\n    if( results === true ){\n      updateContact(it.id, contactObject)\n    }\n    else{\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  else{\n      contactService\n        .create(contactObject)\n          .then(returnedContact => {\n            setPersons(persons.concat(returnedContact))\n            setNewName('')\n            setNewNumber('')\n            setNotificationMessage(`Added ${contactObject.name}`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n          })\n  }\n}\n\nconst contactsToShow = showAll\n  ? persons\n  : persons.filter(person => person.name.toLowerCase().includes(filterString.toLowerCase()))\n\nconst handleNameChange = (event) => {\n  setNewName(event.target.value)\n}\n\nconst handleNumberChange = (event) => {\n  setNewNumber(event.target.value)\n}\n\nconst updateContact = (id, newObject) => {\n  console.log(newObject)\n  console.log(\"id:\", id)\n  contactService\n    .update(id, newObject).then(returnedContact => {\n      setPersons(persons.map(p => p.id !== id ? p : returnedContact))\n      setNotificationMessage(`Changed number of ${newObject.name}`)\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    })\n    .catch(error => {\n      setErrorMessage(`Error: Information of ${newObject.name} has alredy been remove from server`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      })\n}\n\nconst handleDeleteClick = (event) => {\n  const removeID = parseInt(event.target.id)\n  const name = persons.find(p => p.id === removeID).name\n  const result = window.confirm(`Delete ${name} ?`)\n  if( result === true ){\n    contactService\n      .remove(removeID)\n        .then((response) => {\n          setPersons(persons.filter(p => p.id !== removeID))\n          setNotificationMessage(`Removed ${name}`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(`Error: Information of ${name} has alredy been remove from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          })\n  }\n}\n\nconst filterContacts = (event) => {\n  setShowAll(false)\n  setFilterString(event.target.value)\n\n}\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications.Notification message={notificationMessage} />\n      <Notifications.Error message={errorMessage} />\n      <div>\n        <Filter string={filterString} handleChange={filterContacts}/>\n      </div>\n      <h2>Add a new</h2>\n        <PersonForm\n        addContact={addContact}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        />\n      <h2>Numbers</h2>\n      <ShowContacts persons={contactsToShow} handleDeleteClick={handleDeleteClick}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}